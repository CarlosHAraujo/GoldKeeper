# Build for Development environment
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/vsts/pipelines/apps/windows/dot-net

name: GoldKeeper-CI-DEV

trigger:
  branches:
    include:
      - develop
      - feature/*
      - bugfix/*

variables:
  BuildConfiguration: 'dev'

stages:
  - stage: 'Backend'
    pool:
      vmImage: 'VS2017-Win2016'
    jobs:
      - job:
        steps:
          - task: NuGetToolInstaller@0

          - task: DotNetCoreCLI@2
            displayName: Install Nerdbank.GitVersioning tool
            inputs:
              command: custom
              custom: tool
              arguments: install --tool-path . nbgv

          - script: nbgv cloud
            displayName: Set Version

          - task: Npm@1
            displayName: 'Build (back-end) $(BuildConfiguration)'
            inputs:
              command: 'custom'
              customCommand: 'run build:back:$(BuildConfiguration)'

          - task: Npm@1
            displayName: 'Test (back-end) $(BuildConfiguration)'
            inputs:
              command: 'custom'
              customCommand: 'run test:back:$(BuildConfiguration)'
  
  - stage: 'Frontend'
    pool:
      vmImage: 'ubuntu-latest'    
    dependsOn: []
    jobs:
      - job:
        steps:
          - task: Cache@2
            displayName: Cache npm
            inputs:
              key: 'npm | "$(Agent.OS)" | $(Build.SourcesDirectory)/GoldKeeper/ClientApp/package.json'
              path: $(Build.SourcesDirectory)/GoldKeeper/ClientApp/node_modules
              cacheHitVar: CACHE_RESTORED
            
          - task: Npm@1
            displayName: 'npm install (front-end)'
            inputs:
              workingDir: './GoldKeeper/ClientApp/'
              command: 'install'
            condition: ne(variables['CACHE_RESTORED'], 'true')

          - task: Npm@1
            displayName: 'Lint (front-end) $(BuildConfiguration)'
            inputs:
              workingDir: './GoldKeeper/ClientApp/'
              command: 'custom'
              customCommand: 'run lint:$(BuildConfiguration)'
          
          - task: Npm@1
            displayName: 'Build (front-end) $(BuildConfiguration)'
            inputs:
              workingDir: './GoldKeeper/ClientApp/'
              command: 'custom'
              customCommand: 'run build:$(BuildConfiguration)'
          
          - task: Npm@1
            displayName: 'Test (front-end) $(BuildConfiguration)'
            inputs:
              workingDir: './GoldKeeper/ClientApp/'
              command: 'custom'
              customCommand: 'run test:$(BuildConfiguration)'
